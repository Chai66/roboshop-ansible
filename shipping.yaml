- name: install shipping component
  hosts: shipping
  become: yes
  vars:
    mysql_password: RoboShop@1
  tasks:
    - name: install maven
      ansible.builtin.dnf:
        name: maven
        state: present

    - name: create app directory
      ansible.builtin.file:
        path: /app
        state: directory

    - name: download user application
      ansible.builtin.get_url:
        url: https://roboshop-builds.s3.amazonaws.com/shipping.zip
        dest: /tmp

    - name: extract user application
      ansible.builtin.unarchive:
        src: /tmp/shipping.zip
        dest: /app
        remote_src: yes

    - name: Install dependencies
      ansible.builtin.command: mvn clean package
      args:
        chdir: /app

    - name: rename jar file
      ansible.builtin.command: mv target/shipping-1.0.jar shipping.jar
      args:
        chdir: /app

    - name: deamon realod and start
      ansible.builtin.systemd_service:
        daemon_reload: true

    - name: install mysql client
      ansible.builtin.package:
        name: mysql
        state: present

    - name: check cities schema exists or not
      ansible.builtin.command: mysql -h mysql.devopspractice123.online -uroot
        -p{{mysql_password}} -sN -e "SELECT COUNT(*) FROM
        INFORMATION_SCHEMA.SCHEMATA WHERE SCHEMA_NAME = 'cities'"
      register: schema

    - name: print output
      ansible.builtin.debug:
        msg: "schema output: {{schema}}"

    - name: load cities data
      ansible.builtin.shell: "mysql -h mysql.daws76s.online -uroot -p{{mysql_password}}  < /app/schema/shipping.sql"
      when: schema.stdout != "1"

    - name: start and enable shiping
    ansible.builtin.service:
      name: shipping
      state: started
      enabled: yes